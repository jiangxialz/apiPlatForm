<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
       http://www.springframework.org/schema/context     
       http://www.springframework.org/schema/context/spring-context-3.1.xsd    
       http://www.springframework.org/schema/tx     
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd    
       http://www.springframework.org/schema/aop     
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
    <!-- @Controller, @Service, @Configuration, etc. -->
	<context:component-scan base-package="com.sharehome.platform" />
    <context:annotation-config/>
    
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>    
	
	<!-- 事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		 	<tx:method name="get*" read-only="true" />  
            <tx:method name="query*" read-only="true" />  
            <tx:method name="find*" read-only="true" />  
            <tx:method name="load*" read-only="true" />
            <tx:method name="select*" read-only="true" />  
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true"/>
           <!-- <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" /> -->
		</tx:attributes>
	</tx:advice>
	
	<!-- 那些类那些方法使用事务
	<aop:config>
		<aop:pointcut id="allManagerMethod" expression="execution(* com.sharehome.platform.*.*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod"/>
	</aop:config>
	 -->
	 
	<!-- 配置数据源  -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="20"/>
	    <property name="maxIdle" value="20"/>
	    <property name="minIdle" value="3"/>
	    <property name="maxWait" value="600000"/>
	    <!-- sql心跳 -->
	    <property name="logAbandoned" value="true"/>
	    <property name="removeAbandoned" value="true" /> 
        <property name="removeAbandonedTimeout" value="180"/>
	    <property name="testWhileIdle" value="true"/>
	    <property name="testOnBorrow" value="true"/>
	    <property name="testOnReturn" value="true"/>
	    <property name="validationQuery" value="select 1 from dual"/> 
	</bean>
 

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>

	<!-- Spring 工具类 -->
	<bean id="springContextUtil" class="com.sharehome.platform.utils.SpringContextUtil" />
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath:com/sharehome/platform/mapper/*Mapper.xml"/>
	</bean>

</beans>
